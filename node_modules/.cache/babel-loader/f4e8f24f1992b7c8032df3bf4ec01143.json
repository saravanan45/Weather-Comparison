{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Reactjs\\\\Project\\\\weather\\\\src\\\\Comparison.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Comp.css';\nimport suggestedCities from './SuggestionCities.json';\nexport default function Comparison() {\n  const [placeOne, setPlaceOne] = useState('');\n  const [placeTwo, setPlaceTwo] = useState('');\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    let tempCities = [];\n    tempCities = suggestedCities.map(data => data.name);\n    setCities(tempCities);\n  }, []);\n\n  const compareCities = async () => {\n    const dataOne = await fetch(`https://samples.openweathermap.org/data/2.5/find?q=${placeOne}&units=metric&appid=b6907d289e10d714a6e88b30761fae22`);\n    const dataTwo = await fetch(`https://samples.openweathermap.org/data/2.5/find?q=${placeTwo}&units=metric&appid=b6907d289e10d714a6e88b30761fae22`);\n    const tempOne = dataOne.list[0].main.temp;\n    const tempTwo = dataTwo.list[0].main.temp;\n    console.log('tempOne', tempOne);\n    console.log('tempTwo', tempTwo);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Weather Comparison\")), React.createElement(\"div\", {\n    className: \"inputfield\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"place1\",\n    type: \"text\",\n    name: \"place 1\",\n    value: placeOne,\n    list: \"citiesOne\",\n    placeholder: \"Enter your Place 1\",\n    onChange: event => setPlaceOne(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), placeOne.length ? React.createElement(\"datalist\", {\n    id: \"citiesOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, cities.map(city => React.createElement(\"option\", {\n    value: city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))) : null, React.createElement(\"input\", {\n    className: \"place2\",\n    type: \"text\",\n    name: \"place 2\",\n    list: \"citiesTwo\",\n    value: placeTwo,\n    placeholder: \"Enter your Place 2\",\n    onChange: event => setPlaceTwo(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), placeTwo.length ? React.createElement(\"datalist\", {\n    id: \"citiesTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, cities.map(city => React.createElement(\"option\", {\n    value: city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit\",\n    onClick: compareCities,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Compare\"))));\n}","map":{"version":3,"sources":["E:/React/Reactjs/Project/weather/src/Comparison.js"],"names":["React","useState","useEffect","suggestedCities","Comparison","placeOne","setPlaceOne","placeTwo","setPlaceTwo","cities","setCities","tempCities","map","data","name","compareCities","dataOne","fetch","dataTwo","tempOne","list","main","temp","tempTwo","console","log","event","target","value","length","city"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Comp.css';\r\nimport suggestedCities from './SuggestionCities.json';\r\n\r\nexport default function Comparison() {\r\n  const [placeOne, setPlaceOne] = useState('');\r\n  const [placeTwo, setPlaceTwo] = useState('');\r\n  const [cities, setCities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let tempCities = [];\r\n    tempCities = suggestedCities.map(data => data.name);\r\n    setCities(tempCities);\r\n  }, []);\r\n\r\n  const compareCities = async () => {\r\n    const dataOne = await fetch(\r\n      `https://samples.openweathermap.org/data/2.5/find?q=${placeOne}&units=metric&appid=b6907d289e10d714a6e88b30761fae22`\r\n    );\r\n    const dataTwo = await fetch(\r\n      `https://samples.openweathermap.org/data/2.5/find?q=${placeTwo}&units=metric&appid=b6907d289e10d714a6e88b30761fae22`\r\n    );\r\n\r\n    const tempOne = dataOne.list[0].main.temp;\r\n    const tempTwo = dataTwo.list[0].main.temp;\r\n    console.log('tempOne', tempOne);\r\n    console.log('tempTwo', tempTwo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <header className=\"header\">\r\n          <h1>Weather Comparison</h1>\r\n        </header>\r\n        <div className=\"inputfield\">\r\n          <input\r\n            className=\"place1\"\r\n            type=\"text\"\r\n            name=\"place 1\"\r\n            value={placeOne}\r\n            list=\"citiesOne\"\r\n            placeholder=\"Enter your Place 1\"\r\n            onChange={event => setPlaceOne(event.target.value)}\r\n          />\r\n          {placeOne.length ? (\r\n            <datalist id=\"citiesOne\">\r\n              {cities.map(city => (\r\n                <option value={city} />\r\n              ))}\r\n            </datalist>\r\n          ) : null}\r\n          <input\r\n            className=\"place2\"\r\n            type=\"text\"\r\n            name=\"place 2\"\r\n            list=\"citiesTwo\"\r\n            value={placeTwo}\r\n            placeholder=\"Enter your Place 2\"\r\n            onChange={event => setPlaceTwo(event.target.value)}\r\n          />\r\n          {placeTwo.length ? (\r\n            <datalist id=\"citiesTwo\">\r\n              {cities.map(city => (\r\n                <option value={city} />\r\n              ))}\r\n            </datalist>\r\n          ) : null}\r\n          <button type=\"submit\" className=\"submit\" onClick={compareCities}>\r\n            Compare\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}